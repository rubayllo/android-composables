import androidx.compose.foundation.background
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.foundation.lazy.rememberLazyListState
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp


@Composable
fun BasicWheelPicker(onHeightSelected: (Int) -> Unit) {
    val minHeight = 100
    val maxHeight = 230
    val heights = (minHeight..maxHeight).toList()

    var selectedHeight by remember { mutableStateOf(minHeight) }

    val listSize = heights.size
    val middleIndex = listSize / 2
    val scrollToIndex = if (listSize % 2 == 0) middleIndex - 1 else middleIndex

    val scrollState = rememberLazyListState(initialFirstVisibleItemIndex = scrollToIndex)

    LazyColumn(
        state = scrollState,
        modifier = Modifier.height(200.dp) // Altura visible del picker
    ) {
        items(heights) { height ->
            HeightPickerItem(
                height = height,
                isSelected = height == selectedHeight,
                onHeightSelected = { selectedHeight = it; onHeightSelected(it) }
            )
        }
    }
}

@Composable
fun HeightPickerItem(
    height: Int,
    isSelected: Boolean,
    onHeightSelected: (Int) -> Unit
) {
    val backgroundColor = if (isSelected) Color.Gray else Color.Transparent

    Box(
        modifier = Modifier
            .height(50.dp)
            .fillMaxWidth()
            .background(color = backgroundColor)
            .clickable { onHeightSelected(height) },
        contentAlignment = Alignment.Center
    ) {
        Text(
            text = height.toString(),
            fontSize = 20.sp,
            textAlign = TextAlign.Center
        )
    }
}
